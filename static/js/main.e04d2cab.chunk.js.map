{"version":3,"sources":["components/Rewards.js","components/DistanceBetween.js","App.js","reportWebVitals.js","index.js"],"names":["Rewards","props","useState","rw","setRw","fetchy","a","fetch","timeFrame","mode","then","res","json","result","data","total","toFixed","useEffect","onClick","id","className","DistanceBetween","dist","mdist","measurement","value","App","lat","setLat","long","setLong","setData","setDist","setTimeFrame","setMeasurement","fetchData","window","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","onload","spots","map","b","style","listStyleType","display","flexDirection","margin","name","address","geocode","long_street","long_city","reward_scale","distance","oLat","oLong","destLat","destLong","lng","disp","length","type","placeholder","onChange","event","target","min","for","charAt","toUpperCase","substr","setTimeout","document","getElementById","selected","Dimmer","active","Loader","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e04d2cab.chunk.js","sourcesContent":["import {useEffect, useState} from 'react'\r\n\r\nconst Rewards  = (props)=>{\r\n\r\n  const [rw, setRw] = useState([]);\r\n\r\n  \r\n     \r\n    const fetchy = async()=>{\r\n      \r\n      await fetch(`https://api.helium.io/v1/hotspots/${props.a}/rewards/sum?min_time=-${props.timeFrame}%20day`,{mode:'cors'})\r\n     .then(res=>res.json())\r\n       .then(result=> {\r\n\r\n        if(result.data.total){\r\n          setRw(result.data.total.toFixed(5))\r\n        }else{\r\n          setRw(0);\r\n        }\r\n        }); \r\n  }\r\n\r\n useEffect(() => {\r\n    fetchy();\r\n\r\n}, [setRw,props.a,props.timeFrame])\r\n  \r\n \r\nreturn (<li onClick={fetchy}><span id=\"rw\">{rw}</span> HNT in the last <span className=\"timeframe\">{props.timeFrame}</span> day(s)</li>);\r\n\r\n  \r\n};\r\n\r\nexport default Rewards;","const DistanceBetween = (props)=>{\r\n\r\n    let dist = props.dist;\r\n    let mdist = (dist*3)/5280;\r\n\r\n    const distant =()=>{\r\n        if(measurement.value == 'miles'){\r\n            return mdist\r\n        }else{return dist}\r\n    }\r\n    \r\n    return `${distant().toFixed(2)} ${measurement.value} away`\r\n}\r\n\r\nexport default DistanceBetween;","import './App.css';\nimport React,{ useState, useEffect } from 'react'\nimport Rewards from './components/Rewards';\nimport DistanceBetween from './components/DistanceBetween'\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\nfunction App() {\n  const [lat, setLat] = useState('');\n  const [long, setLong] = useState('');\n  const [data, setData] = useState([]);\n  const [dist, setDist] = useState(10000);\n  const [timeFrame,setTimeFrame] =useState(\"1\");\n  const [measurement,setMeasurement] = useState('meters')\n  let mdist = dist*3/5280\n          //console.log(measurement)\n\n    \n  \n  useEffect(()=>{\n    const fetchData = async()=>{\n      window.navigator.geolocation.getCurrentPosition(function(position){\n        const lat = position.coords.latitude\n        const long = position.coords.longitude\n       setLat(lat);\n       setLong(long);\n      });\n\n            if(lat !== '' && long !==''){\n        \n        await fetch(`https://api.helium.io/v1/hotspots/location/distance?lat=${lat}&lon=${long}&distance=${dist}`, {mode:'cors'})\n      .then(res=>res.json())\n      .then(result=>{\n            let data = result.data;\n            \n            setData(data);  \n          })\n      }\n      \n        }\n    \n\n      fetchData();\n    \n  }\n  ,[onload, dist]);\n    \n\nconst handleChange=(event)=>{\n  if(measurement == 'meters'){\n    \n            setDist(event.target.value);\n\n    \n    \n  }else{  \n            setDist(event.target.value * 5280/3)  \n  }\n};\n\nconst handleRange=(event)=>{\n  setTimeout(() => {\n    setTimeFrame(event.target.value);\n  }, 2000);\n  \n};\n\nconst changeMeasure=(event)=>{\n  setMeasurement(event.target.value)\n  if(event.target.value == 'meters'){\n    setDist(dist)\n  }else{\n    \n    document.getElementById('distance').placeholder = mdist\n    setDist(dist)\n    \n    \n  }\n  \n\n  \n}\nlet spots = [];\nif(data){\n spots =\n \n data.map((a,b)=>{\n        \n          return(\n              <ul className=\"spots\" style={{listStyleType:'none',display:'flex',flexDirection:'column',margin:20}} key={b}>\n                <li><strong>{a.name}</strong></li>\n                <li className=\"addy\">{a.address}</li>\n                \n                <li>Street Name: {a.geocode.long_street}</li>\n                <li>City: {a.geocode.long_city}</li>\n                <li>Reward Scale: {a.reward_scale}</li> \n                <DistanceBetween dist ={a.distance} oLat={lat} oLong={long} destLat = {a.lat} destLong = {a.lng}/>\n                <Rewards a={a.address} timeFrame={timeFrame} />\n            </ul>\n            )}\n          )} \n\n\n\n          //ui changing\n  let disp =function(){\n    if (measurement=='meters'){\n      return dist\n    }else{return mdist}\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"bg\"></div>\n     <h1>\n       Hotspots near you\n     </h1>\n     <p>There are <span className=\"distance\">{spots.length}</span> Helium Hotspots within <br/>{disp()} {measurement} of your location</p>\n     <input name=\"distance\" type='number' placeholder={disp()} value={disp()} id='distance' onChange={handleChange} min=\"1\"/> \n     <label id=\"distLabel\" for=\"distance\">{measurement.charAt(0).toUpperCase()+measurement.substr(1)}</label>\n     <select name=\"timeFrame\" id=\"timeFrame\" onChange={handleRange}>\n       <option value='1'>1 Day</option>\n       <option value=\"7\">7 Days</option>\n       <option value=\"30\">30 Days</option>\n     </select>\n     <label id=\"timeLabel\" for=\"timeFrame\">Rewards Duration</label>\n    \n     <select name=\"measurement\" id=\"measurement\" onChange={changeMeasure}>\n       <option value=\"miles\">Miles</option>\n       <option selected value =\"meters\">Meters</option>\n     </select>\n     <label for=\"measurement\" id=\"measurementLabel\">Miles or Meters</label>\n\n     \n     \n    \n     {\n     spots!='undefined'?(<ul>{spots}</ul>):(<div>\n       <Dimmer active>\n          <Loader active>Loading</Loader>\n        </Dimmer>\n        </div>) \n      }\n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}